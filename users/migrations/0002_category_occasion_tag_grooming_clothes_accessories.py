# Generated by Django 5.0 on 2024-09-28 05:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Occasion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Grooming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='grooming_pics/')),
                ('name', models.CharField(max_length=255)),
                ('date_added', models.DateField(default=django.utils.timezone.now)),
                ('location', models.CharField(max_length=255)),
                ('is_favorite', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('occasion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.occasion')),
                ('tags', models.ManyToManyField(blank=True, to='users.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Clothes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='clothes_pics/')),
                ('name', models.CharField(max_length=255)),
                ('date_added', models.DateField(default=django.utils.timezone.now)),
                ('location', models.CharField(max_length=255)),
                ('is_favorite', models.BooleanField(default=False)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('occasion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.occasion')),
                ('tags', models.ManyToManyField(blank=True, to='users.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Accessories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='accessories_pics/')),
                ('name', models.CharField(max_length=255)),
                ('date_added', models.DateField(default=django.utils.timezone.now)),
                ('location', models.CharField(max_length=255)),
                ('is_favorite', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('occasion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.occasion')),
                ('tags', models.ManyToManyField(blank=True, to='users.tag')),
            ],
        ),
    ]
